# Generated by Django 2.2 on 2019-12-04 03:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Curriculum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the curriculum.', max_length=200, verbose_name='Title of the curriculum')),
                ('competency', models.CharField(blank=True, help_text='Competency.', max_length=200, null=True, verbose_name='Competency')),
                ('presenter_logo', models.ImageField(blank=True, help_text='Presenter logo. Most browsers support dragging the image directly on to the "Choose File" button above.', upload_to='images/lesson/curriculum/presenter')),
                ('slug', models.SlugField(unique=True)),
                ('owner', models.ForeignKey(help_text='The owner of the curriculum.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('presenters', models.ManyToManyField(blank=True, help_text='Users who are presenting this curriculum.', related_name='presenters', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(help_text='The project.', on_delete=django.db.models.deletion.CASCADE, to='base.Project', verbose_name='Project name')),
            ],
            options={
                'ordering': ['project', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('last_update_en', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('last_update_ind', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('sequence_number', models.IntegerField(default=0, help_text='The order in which this section is listed within a project', verbose_name='Section number')),
                ('name', models.CharField(help_text='Name of section.', max_length=200, verbose_name='Name of section')),
                ('name_en', models.CharField(help_text='Name of section.', max_length=200, null=True, verbose_name='Name of section')),
                ('name_ind', models.CharField(help_text='Name of section.', max_length=200, null=True, verbose_name='Name of section')),
                ('notes', models.TextField(help_text='Section notes.', verbose_name='Section notes. Markdown is supported.')),
                ('notes_en', models.TextField(help_text='Section notes.', null=True, verbose_name='Section notes. Markdown is supported.')),
                ('notes_ind', models.TextField(help_text='Section notes.', null=True, verbose_name='Section notes. Markdown is supported.')),
                ('slug', models.SlugField(unique=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Project', verbose_name='Project name')),
            ],
            options={
                'ordering': ['project', 'sequence_number'],
            },
        ),
        migrations.CreateModel(
            name='Worksheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('last_update_en', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('last_update_ind', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('sequence_number', models.IntegerField(default=0, help_text='The order in which this worksheet is listed within a section', verbose_name='Worksheet number')),
                ('module', models.CharField(help_text='Name of worksheet.', max_length=200)),
                ('module_en', models.CharField(help_text='Name of worksheet.', max_length=200, null=True)),
                ('module_ind', models.CharField(help_text='Name of worksheet.', max_length=200, null=True)),
                ('title', models.CharField(help_text='Title of module.', max_length=200)),
                ('title_en', models.CharField(help_text='Title of module.', max_length=200, null=True)),
                ('title_ind', models.CharField(help_text='Title of module.', max_length=200, null=True)),
                ('summary_leader', models.CharField(help_text='Title of the summary.', max_length=200)),
                ('summary_leader_en', models.CharField(help_text='Title of the summary.', max_length=200, null=True)),
                ('summary_leader_ind', models.CharField(help_text='Title of the summary.', max_length=200, null=True)),
                ('summary_text', models.TextField(help_text='Content of the summary. Markdown is supported.')),
                ('summary_text_en', models.TextField(help_text='Content of the summary. Markdown is supported.', null=True)),
                ('summary_text_ind', models.TextField(help_text='Content of the summary. Markdown is supported.', null=True)),
                ('summary_image', models.ImageField(blank=True, help_text='Image of the summary. A landscape image, approximately 800*200. Most browsers support dragging the image directly on to the "Choose File" button above.', upload_to='images/lesson/worksheet/summary_image')),
                ('exercise_goal', models.CharField(blank=True, help_text='The goal of the exercise.', max_length=200, null=True)),
                ('exercise_goal_en', models.CharField(blank=True, help_text='The goal of the exercise.', max_length=200, null=True)),
                ('exercise_goal_ind', models.CharField(blank=True, help_text='The goal of the exercise.', max_length=200, null=True)),
                ('exercise_task', models.TextField(blank=True, help_text='Task in the exercise. Markdown is supported.', null=True)),
                ('exercise_task_en', models.TextField(blank=True, help_text='Task in the exercise. Markdown is supported.', null=True)),
                ('exercise_task_ind', models.TextField(blank=True, help_text='Task in the exercise. Markdown is supported.', null=True)),
                ('exercise_image', models.ImageField(blank=True, help_text='Image for the exercise part. You should normally either use the Requirements table or this image field. A landscape image, approximately 800*200. Most browsers support dragging the image directly on to the "Choose File" button above.', upload_to='images/lesson/worksheet/exercise')),
                ('more_about_title', models.CharField(blank=True, default='More about', help_text='More about title.', max_length=200, null=True)),
                ('more_about_title_en', models.CharField(blank=True, default='More about', help_text='More about title.', max_length=200, null=True)),
                ('more_about_title_ind', models.CharField(blank=True, default='More about', help_text='More about title.', max_length=200, null=True)),
                ('more_about_text', models.TextField(blank=True, help_text='More detail about the content of the worksheet. Markdown is supported.', null=True)),
                ('more_about_text_en', models.TextField(blank=True, help_text='More detail about the content of the worksheet. Markdown is supported.', null=True)),
                ('more_about_text_ind', models.TextField(blank=True, help_text='More detail about the content of the worksheet. Markdown is supported.', null=True)),
                ('more_about_image', models.ImageField(blank=True, help_text='Image for the more about part. Most browsers support dragging the image directly on to the "Choose File" button above.', upload_to='images/lesson/worksheet/more_about')),
                ('external_data', models.FileField(blank=True, help_text='External data used in this worksheet. Usually a ZIP file. Most browsers support dragging the file directly on to the "Choose File" button above.', upload_to='images/lesson/worksheet/external_data')),
                ('youtube_link', models.URLField(blank=True, help_text='Link to a YouTube video.', null=True)),
                ('author_name', models.CharField(blank=True, help_text='The author of this worksheet.', max_length=200, null=True)),
                ('author_link', models.URLField(blank=True, help_text='Link to the author webpage.', null=True)),
                ('slug', models.SlugField(unique=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lesson.Section')),
            ],
            options={
                'ordering': ['section', 'sequence_number'],
            },
        ),
        migrations.CreateModel(
            name='WorksheetQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('last_update_en', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('last_update_ind', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('sequence_number', models.IntegerField(default=0, help_text='Used to order the questions for a lesson into the correct sequence.')),
                ('question', models.CharField(help_text='Question.', max_length=200)),
                ('question_en', models.CharField(help_text='Question.', max_length=200, null=True)),
                ('question_ind', models.CharField(help_text='Question.', max_length=200, null=True)),
                ('question_image', models.ImageField(blank=True, help_text='Image for the question. Most browsers support dragging the image directly on to the "Choose File" button above.', upload_to='images/lesson/worksheet_question/question_image')),
                ('worksheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lesson.Worksheet')),
            ],
            options={
                'ordering': ['worksheet', 'sequence_number'],
            },
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('last_update_en', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('last_update_ind', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('sequence_number', models.IntegerField(default=0, help_text='Used to order the specifications for a lesson into the correct sequence.')),
                ('title', models.CharField(help_text='Title of specification. Markdown is supported', max_length=200)),
                ('title_en', models.CharField(help_text='Title of specification. Markdown is supported', max_length=200, null=True)),
                ('title_ind', models.CharField(help_text='Title of specification. Markdown is supported', max_length=200, null=True)),
                ('value', models.CharField(help_text='Value of specification. Markdown is supported', max_length=200)),
                ('value_en', models.CharField(help_text='Value of specification. Markdown is supported', max_length=200, null=True)),
                ('value_ind', models.CharField(help_text='Value of specification. Markdown is supported', max_length=200, null=True)),
                ('notes', models.CharField(blank=True, help_text='Notes of specification.', max_length=200)),
                ('notes_en', models.CharField(blank=True, help_text='Notes of specification.', max_length=200, null=True)),
                ('notes_ind', models.CharField(blank=True, help_text='Notes of specification.', max_length=200, null=True)),
                ('worksheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lesson.Worksheet')),
            ],
            options={
                'ordering': ['worksheet', 'sequence_number'],
            },
        ),
        migrations.CreateModel(
            name='FurtherReading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('last_update_en', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('last_update_ind', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('text', models.CharField(help_text='Text of the further reading.', max_length=200)),
                ('text_en', models.CharField(help_text='Text of the further reading.', max_length=200, null=True)),
                ('text_ind', models.CharField(help_text='Text of the further reading.', max_length=200, null=True)),
                ('link', models.CharField(blank=True, help_text='Further reading link.', max_length=200)),
                ('worksheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lesson.Worksheet')),
            ],
            options={
                'ordering': ['worksheet'],
            },
        ),
        migrations.CreateModel(
            name='CurriculumWorksheets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_number', models.IntegerField(default=0, help_text='The order in which this worksheet is listed within a curriculum', verbose_name='Worksheet number')),
                ('curriculum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lesson.Curriculum')),
                ('worksheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lesson.Worksheet')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('last_update_en', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('last_update_ind', models.DateTimeField(blank=True, help_text='Time stamp when the last worksheet updated.', null=True)),
                ('sequence_number', models.IntegerField(default=0, help_text='Used to order the answers for a question into the correct sequence.')),
                ('is_correct', models.BooleanField(help_text='Is this answer correct?')),
                ('answer', models.CharField(help_text='Answer.', max_length=200)),
                ('answer_en', models.CharField(help_text='Answer.', max_length=200, null=True)),
                ('answer_ind', models.CharField(help_text='Answer.', max_length=200, null=True)),
                ('answer_explanation', models.TextField(blank=True, help_text='Answer explanation. Markdown is supported.')),
                ('answer_explanation_en', models.TextField(blank=True, help_text='Answer explanation. Markdown is supported.', null=True)),
                ('answer_explanation_ind', models.TextField(blank=True, help_text='Answer explanation. Markdown is supported.', null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lesson.WorksheetQuestion')),
            ],
            options={
                'ordering': ['question', 'sequence_number'],
            },
        ),
    ]
