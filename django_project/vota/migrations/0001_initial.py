# Generated by Django 2.2 on 2019-12-04 03:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import vota.models.ballot


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of this committee.', max_length=255)),
                ('description', models.TextField(blank=True, help_text="A description of the committee's role within the project.", max_length=1000, null=True)),
                ('sort_number', models.SmallIntegerField(default=0, help_text='The order in which this committee is listed within a project')),
                ('quorum_setting', models.CharField(choices=[('100', 'All Members'), ('75', 'Three Quarters'), ('50', 'Half'), ('25', 'One Quarter'), ('1', 'One Member')], help_text='The percentage of committee members required to vote in order to have quorum', max_length=3)),
                ('slug', models.SlugField()),
                ('chair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='committee_chairman', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Project')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('project', 'slug'), ('name', 'project')},
            },
        ),
        migrations.CreateModel(
            name='Ballot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of this ballot.', max_length=255)),
                ('summary', models.CharField(help_text='A brief overview of the ballot.', max_length=250)),
                ('description', models.TextField(blank=True, help_text='A full description of the proposal if a summary is not enough!', max_length=3000, null=True)),
                ('approved', models.BooleanField(default=False, help_text='Whether this ballot has been approved.')),
                ('denied', models.BooleanField(default=False, help_text='Whether this ballot has been denied.')),
                ('no_quorum', models.BooleanField(default=False, help_text='Whether the ballot was denied because no quorum was reached')),
                ('open_from', models.DateTimeField(default=django.utils.timezone.now, help_text='Date the ballot opens')),
                ('closes', models.DateTimeField(default=vota.models.ballot.closes_default_time, help_text='Date the ballot closes')),
                ('private', models.BooleanField(default=False, help_text='Should members be prevented from viewing results before voting?')),
                ('slug', models.SlugField()),
                ('committee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vota.Committee')),
                ('proposer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('name', 'committee'), ('committee', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(choices=[('y', 'Yes'), ('-', 'Abstain'), ('n', 'No')], default='-', max_length=1)),
                ('ballot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vota.Ballot')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'ballot')},
            },
        ),
    ]
